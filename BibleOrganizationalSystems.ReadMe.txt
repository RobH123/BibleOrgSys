# BibleOrganizationalSystems.ReadMe.txt
#   ReadMe.txt for Bible Organizational Systems
#   Version 0.10
#   Last modified: 2010-10-14
#
# Abbreviations:
#   XML = eXtensible Markup Language -- see http://en.wikipedia.org/wiki/XML
#   DTD = Document Type Definition -- see http://en.wikipedia.org/wiki/Document_Type_Definition
#   RNG = Relax NG schema (REgular LAnguage for XML Next Generation) -- see http://en.wikipedia.org/wiki/RELAX_NG
#   RNC = RNG compact syntax -- see http://en.wikipedia.org/wiki/RELAX_NG#Compact_syntax
#
#   SBL = Society of Biblical Literature -- see http://www.sbl-site.org
#   SIL = SIL International -- see http://sil.org
#   OSIS = Open Scripture Information Standard -- see http://bibletechnologies.net
#   OXES = "Open" XML for Editing Scripture -- curently being developed within SIL -- see http://groups.google.com/group/scriptureinterchangeformat
#   UBS = United Bible Societies -- see http://paratext.ubs-translations.org
#   SFM = Standard Format Markers used widely within SIL -- see http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=Glossary#sfm
#   USFM = UBS Unified Standard Format Markers -- see http://paratext.ubs-translations.org/about/usfm
#
#
# Enclosed are three files:
#
#   DataFiles/BibleOrganizationalSystems.xml
#       A UTF-8 XML file encoding SBL, OSIS and UBS Paratext/USFM/OXES Bible books codes
#       The file also includes an internal DTD. To validate the XML on Linux systems, use
#           xmllint --noout --valid DataFiles/BibleBooksCodes.xml
#               (If it gives no output or error messages, then it has validated.)
#       The data also includes a new 3-letter UPPER CASE referenceAbbreviation which always starts with a letter and so can be used directly as an XML ID (unlike most of the other fields)
#       The sequential (and thus unique) id codes are for processing and error messages -- they carry no meaning and the order of the entries is unimportant.
#       The English name is included as a comment only and is also unimportant.
#       The file includes an OSIS style header record. (See PDF file at http://bibletechnologies.net)
#           Note though, that we use the xsd:date style with hyphens not with periods as per OSIS.
#           Note also that you might have to expand the internal DTD and the Relax NG schema if you add additional fields to the header.
#       The data comes from the SBL Manual of Style, the OSIS 2.1.1 users' manual and from a USFM Bible edited by the UBS Paratext program.
#       While it is a derived work, I don't expect anyone to object to the use of this data. I think it is fair use to offer it as a public domain compilation.
#
#
#   DataFiles/BibleOrganizationalSystems.rnc
#       A Relax NG Compact Syntax schema file
#       On Linux, to convert to RNG, use
#           trang DataFiles/BibleOrganizationalSystems.rnc DerivedFiles/BibleOrganizationalSystems.rng
#       On Linux, to validate against the .rng file, use
#           xmllint --noout --relaxng DerivedFiles/BibleOrganizationalSystems.rng DataFiles/BibleOrganizationalSystems.xml
#       or to validate against both this and the internal DTD, use
#           xmllint --noout --relaxng DerivedFiles/BibleOrganizationalSystems.rng --valid DataFiles/BibleOrganizationalSystems.xml
#
#
#   BibleOrganizationalSystems.py (for Python 3)
#       This small program will load and do some very basic checking of the XML data file.
#       It can be used in a larger Python program to load the XML data into a number of Python dictionaries (with different fields as the key).
#       It can also be used to convert the XML data directly to Python or C code which can be included in another program (if you don't want to supply the master XML file).
#       It is expected that the user might want to modify the Python code in order to customize it to your particular needs for either of the above strategies.
#       The program is open source with a GPL-3.0 licence.
#       If you have Python3 installed on Linux, run the program with ./BibleBibleOrganizationalSystems.py (once you have made the program file "executable").
#               (Alternatively, try: python3 BibleBooksCodes.py)
#           This should load and check the XML file and create BibleOrganizationalSystemsTables.py and BibleOrganizationalSystemsTables.h files in the DerivedFiles folder, suitable for including in other programs.
#
#
# Robert Hunt
# Hunt.Robert@gmail.com
# October 2010.
